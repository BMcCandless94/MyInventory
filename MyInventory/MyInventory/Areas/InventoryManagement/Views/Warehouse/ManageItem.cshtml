@using MyInventory.Library.Extensions;
@model MyInventory.Areas.InventoryManagement.Items.Models.ManageItemViewModel

@{
    ViewBag.Title = "Manage Item";
    Layout = "~/Areas/InventoryManagement/Views/Shared/_WarehouseLayout.cshtml";
}

@section TitleText{
    Edit @Model.Name
}

<div class="w-100 h-100 px-5 pt-1 pb-3 overflow-auto">

    @using (Html.BeginForm("ManageItem", "Warehouse", new { area = "InventoryManagement" }, FormMethod.Post, new { @autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.ItemID)
        <h2 class="mb-4 text-dark">Edit Item</h2>
        @Html.ValidationSummary(null, new { @class = "text-danger", @style = "font-size: 0.9em;" })
        <div class="form-group">
            @Html.LabelFor(x => x.Name, new { @class = "lead" })
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @style = "max-width: 25em;" })
            @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger", @style = "font-size: 0.8em;" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Description, new { @class = "lead" })
            @Html.TextBoxFor(x => x.Description, new { @class = "form-control", @style = "max-width: 25em;" })
            @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger", @style = "font-size: 0.8em;" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.UOM, new { @class = "lead" })
            @Html.TextBoxFor(x => x.UOM, new { @class = "form-control", @style = "max-width: 25em;" })
            @Html.DescriptionFor(x => x.UOM)
            @Html.ValidationMessageFor(x => x.UOM, null, new { @class = "text-danger", @style = "font-size: 0.8em;" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Price, new { @class = "lead" })
            @Html.TextBoxFor(x => x.Price, new { @class = "form-control", @style = "max-width: 25em;", type = "number", step = ".01" })
            @Html.DescriptionFor(x => x.Price)
            @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger", @style = "font-size: 0.8em;" })
        </div>
        <div class="mt-5">
            <button type="submit" class="btn btn-siteblue">Update Item</button>
        </div>
    }
</div>